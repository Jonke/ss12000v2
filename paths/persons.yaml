persons:
  get:
    tags:
      - Person
    summary: Hämta en lista med personer.
    parameters:
      - $ref: "searchParameters.yaml#/SearchCreatedBefore"
      - $ref: "searchParameters.yaml#/SearchCreatedAfter"
      - $ref: "searchParameters.yaml#/SearchModifiedBefore"
      - $ref: "searchParameters.yaml#/SearchModifiedAfter"
      - name: sortkey
        description: Anger hur resultatet ska sorteras.
        in: query
        schema:
          type: string
          enum:
            - DisplayName
            - GivenNameDesc
            - GivenNameAsc
            - FamilyNameDesc
            - FamilyNameAsc 
            - NorEduPersonNIN
            - LastModifiedDesc
          default: LastModifiedDesc
      - $ref: "searchParameters.yaml#/Offset"
      - $ref: "searchParameters.yaml#/Limit"
      - name: enrolment.schoolUnit
        description: >
          Begränsa urvalet till de elever som har en inskrivning (enrolment) på angiven
          skolenhet. Detta kan kombineras med enrolment.startDate.onOrAfter
          och enrolment.endDate.onOrBefore för att begränsa till aktiva inskrivningar.
        in: query
        schema:
          type: string
          format: uuid
      - name: enrolment.startDate.onOrAfter
        description: >
          Begränsa urvalet av personer till de som har
          inskrivningar som är aktiva inom det intervall som startar på angivet datum.
        in: query
        schema:
          type: string
          format: date
      - name: enrolment.endDate.onOrBefore
        description: >
          Begränsa urvalet av personer till de som har
          inskrivningar som är aktiva inom det intervall som avslutas på angivet datum.
        in: query
        schema:
          type: string
          format: date

      - name: placement.schoolUnit
        description: >
          Begränsa urvalet till de elever som har en placering på angiven
          skolenhet. Detta kan kombineras med placement.startDate.onOrAfter
          och placement.endDate.onOrBefore för att begränsa till aktiva placeringar.
        in: query
        schema:
          type: string
          format: uuid
      - name: placement.startDate.onOrAfter
        description: >
          Begränsa urvalet av personer till de som har
          placeringar som är aktiva inom det intervall som startar på angivet datum.
        in: query
        schema:
          type: string
          format: date
      - name: placement.endDate.onOrBefore
        description: >
          Begränsa urvalet av personer till de som har
          placeringar som är aktiva inom det intervall som avslutas på angivet datum.
        in: query
        schema:
          type: string
          format: date
      - name: dutySchoolUnit
        description: Begränsa urvalet till de tjänstgöringar som är kopplade till en skolenhet.
        in: query
        schema:
          type: string
          format: uuid
      - name: expand
        description: Beskriver om expanderade data ska hämtas
        in: query
        schema:
          type: array
          items:
            type: string
            enum: [duties, children]
      - $ref: "searchParameters.yaml#/ExpandReferenceNames"

    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "../Person.yaml#/PersonsExpanded"

personsLookup:
  post:
    tags:
      - Person
    summary: Hämta många personer baserat på en lista av ID:n eller personnummer.
    description: >
      Hämta många personer.
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "../Person.yaml#/PersonsExpanded"
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              ids:
                type: array
                items:
                  type: string
                  format: uuid
              norEduPersonNINs:
                type: array
                items:
                  type: string
                  pattern: '^\d{8}[A-Z0-9]{2}\d{2}$'
            example:
              ids:  
                - d544563a-747a-42d3-8d37-415a101537fa
              norEduPersonNINs:
                - 100203-7271
      required: true

personsById:
  get:
    tags:
      - Person
    summary: Get person by person id
    parameters:
      - name: id
        in: path
        description: ID för personen som ska hämtas
        required: true
        schema:
          type: string
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "../Person.yaml#/PersonExpanded"
      "400":
        description: Invalid personname supplied
      "403":
        description: Not authorised
      "404":
        description: Person not found
