grades:
  get:
    tags:
      - Betyg
    summary: Hämta en lista med betyg.
    parameters:
      - name: schoolUnit
        description: Begränsa urvalet till de betyg som är kopplade till skolenhet.
        in: query
        schema:
          type: string
          format: uuid
      - name: student
        description: Begränsa urvalet till de betyg som tillhör eleven
        in: query
        schema:
          type: string
          format: uuid
      - name: registeredBy
        description: Begränsa urvalet till de betyg som är registrerade av personen
        in: query
        schema:
          type: string
          format: uuid
      - name: gradingTeacher
        description: Begränsa urvalet till de betyg som är utfärdade av ansvarig lärare
        in: query
        schema:
          type: string
          format: uuid
      - name: registeredDate.onOrAfter
        description: Begränsa urvalet av betyg till de som är registerade inom det intervall som startar på angivet datum.
        in: query
        schema:
          type: string
          format: date
      - name: registeredDate.onOrBefore
        description: Begränsa urvalet av betyg till de som är registerade inom det intervall som slutar på angivet datum.
        in: query
        schema:
          type: string
          format: date
      - $ref: "searchParameters.yaml#/SearchCreatedBefore"
      - $ref: "searchParameters.yaml#/SearchCreatedAfter"
      - $ref: "searchParameters.yaml#/SearchModifiedBefore"
      - $ref: "searchParameters.yaml#/SearchModifiedAfter"
      - $ref: "searchParameters.yaml#/ExpandReferenceNames"
      - name: sortkey
        description: Anger hur resultatet ska sorteras.
        in: query
        schema:
          type: string
          enum:
            - Student
            - LastModifiedDesc
          default: LastModifiedDesc
      - $ref: "searchParameters.yaml#/Offset"
      - $ref: "searchParameters.yaml#/Limit"
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "../Grade.yaml#/Grades"
gradesLookup:
  post:
    tags:
      - Betyg
    summary: Hämta många betyg baserat på en lista av ID:n.
    description: >
      Hämta många betyg.
    parameters:
      - $ref: "searchParameters.yaml#/ExpandReferenceNames"
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "../Grade.yaml#/Grade"
    requestBody:
      content:
        application/json:
          schema:
           $ref : "../common.yaml#/components/schemas/IdLookup"
      required: true

gradeById:
  get:
    tags:
      - Betyg
    summary: Hämta betyg baserat på ID
    parameters:
      - name: id
        in: path
        description: ID för betyg som ska hämtas
        required: true
        schema:
          type: string
      - $ref: "searchParameters.yaml#/ExpandReferenceNames"
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "../Grade.yaml#/Grade"
      "400":
        description: Invalid id supplied
      "403":
        description: Not authorised
      "404":
        description: Duty not found
